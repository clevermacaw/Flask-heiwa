openapi: 3.0.1
info:
  description: A forum API.
  title: Heiwa
  version: 0.13.50
paths:
  /forums:
    post:
      summary: Creates a new forum.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumCreateEdit"
      responses:
        "201":
          description: The newly created forum.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Forum"
        "403":
          description: "The forum's child level is more than what the service's
          configuration allows."
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumChildLevelLimitReached
                      details:
                        type: integer
    get:
      summary: "Returns a list of forums that the current user has access to,
      and matches the filter if there is one requested."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumSearch"
      responses:
        "200":
          description: The list of forums.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Forum"
    delete:
      summary: "Deletes the forums that match the current user has access to,
      and matches the filter if there is one requested. The objects associated
      with them are deleted as well."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumSearch"
      responses:
        "204":
          description: Success, the forums have been deleted.
  /forums/{id}:
    delete:
      summary: "Deletes the requested forum,
      as well as objects associated with it."
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "204":
          description: Success. The forum has been deleted.
    put:
      summary: Updates the requested forum with new values.
      description: "If the parent_forum_id is different, the forum will be moved
      there. This includes all threads, posts, etc. Please keep in mind that its
      order position may also need to be changed."
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumCreateEdit"
      responses:
        "200":
          description: The updated forum.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Forum"
        "403":
          description: "The forum has not been changed, or was requested to have
          its parent become itself."
          content:
            application/json:
              schema:
                oneOf:
                  -
                    allOf:
                      - $ref: "#/components/schemas/Exception"
                    properties:
                      exception:
                        properties:
                          type:
                            enum:
                              - APIForumUnchanged
                          details:
                            allOf:
                              - $ref: "#/components/schemas/Forum/properties/id"
                    description: The forum has not been changed.
                  -
                    allOf:
                      - $ref: "#/components/schemas/Exception"
                    properties:
                      exception:
                        properties:
                          type:
                            enum:
                              - APIForumParentIsChild
                          details:
                            allOf:
                              - $ref: "#/components/schemas/Forum/properties/id"
                    description: "The current forum's ID is the same as
                    the requested parent forum's."
    get:
      summary: Returns the requested forum.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Forum"
          description: The forum.
  /forums/{id}/authorized-actions:
    get:
      summary: "Returns the actions the current user is allowed
      to perform on the requested forum."
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "200":
          description: The actions.
          content:
            application/Json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumAuthorizedActions"
  /forums/{id_old}/merge/{id_new}:
    put:
      summary: Merges the requested forum with another.
      parameters:
        - in: path
          name: id_old
          schema:
            type: string
            format: uuid
          required: true
          description: The original forum\'s ID.
        - in: path
          name: id_new
          schema:
            type: string
            format: uuid
          required: true
          description: The new forum\'s ID.
      responses:
        "200":
          description: The updated forum.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Forum"
  /forums/{id}/parsed-permissions:
    get:
      summary: "Returns the current user's parsed permissions for
      the requested forum."
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "200":
          description: The permissions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumNullablePermissions"
  /forums/{forum_id}/permissions/group/{group_id}:
    delete:
      summary: Deletes the given group\'s permissions for the given forum.
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: group_id
          schema:
            type: string
            format: uuid
          required: true
          description: The group\'s ID.
      responses:
        "204":
          description: Success. The permissions have been deleted.
        "404":
          description: There are no group permissions to be found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumPermissionsGroupNotFound
                      details:
                        type: object
                        properties:
                          forum_id:
                            allOf:
                              - $ref: "#/components/schemas/Forum/properties/id"
                          group_id:
                            allOf:
                              - $ref: "#/components/schemas/Group/properties/id"
    put:
      summary: "Updates the given forum's permissions for the given group.
      If there are none, they're created automatically."
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: group_id
          schema:
            type: string
            format: uuid
          required: true
          description: The group\'s ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumPermissionsGroup"  # TODO (remove group_id?)
      responses:
        "200":
          description: The new permissions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumPermissionsGroup"
        "403":
          description: The permissions have not been changed.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumPermissionsGroupUnchanged
                      details:
                        allOf:
                          - $ref: "#/components/schemas/Forum/properties/id"
    get:
      summary: Returns the given group\'s permissions for the given forum.
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: group_id
          schema:
            type: string
            format: uuid
          required: true
          description: The group\'s ID.
      responses:
        "200":
          description: The permissions. If null, they\'re unset.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumPermissionsGroup"
                nullable: true
  /forums/{forum_id}/permissions/user/{user_id}:
    delete:
      summary: Deletes the given user\'s permissions for the given forum.
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: user_id
          schema:
            type: string
            format: uuid
          required: true
          description: The user\'s ID.
      responses:
        "204":
          description: Success. The permissions have been deleted.
        "404":
          description: There are no user permissions to be found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumPermissionsUserNotFound
                      details:
                        type: object
                        properties:
                          forum_id:
                            allOf:
                              - $ref: "#/components/schemas/Forum/properties/id"
                          user_id:
                            allOf:
                              - $ref: "#/components/schemas/User/properties/id"
    put:
      summary: "Updates the given forum's permissions for the given user.
      If there are none, they're created automatically."
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: user_id
          schema:
            type: string
            format: uuid
          required: true
          description: The user\'s ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ForumPermissionsUser"  # TODO (remove user_id?)
      responses:
        "200":
          description: The new permissions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumPermissionsUser"
        "403":
          description: The permissions have not been changed.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumPermissionsUserUnchanged
                      details:
                        allOf:
                          - $ref: "#/components/schemas/Forum/properties/id"
    get:
      summary: Returns the given user\'s permissions for the given forum.
      parameters:
        - in: path
          name: forum_id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
        - in: path
          name: user_id
          schema:
            type: string
            format: uuid
          required: true
          description: The user\'s ID.
      responses:
        "200":
          description: The permissions. If null, they\'re unset.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumPermissionsUser"
                nullable: true
  /forums/{id}/subscription:
    put:
      summary: Subscribes the current user to the given forum.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "204":
          description: Success. The subscription has been created.
        "403":
          description: The user has already subscribed to the forum before.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumSubscriptionAlreadyExists
                      details:
                        allOf:
                          - $ref: "#/components/schemas/Forum/properties/id"
    delete:
      summary: Deletes the current user\'s subscription for the given forum.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "204":
          description: Success. The subscription has been deleted.
        "403":
          description: There is no subscription to delete.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Exception"
                properties:
                  exception:
                    properties:
                      type:
                        enum:
                          - APIForumSubscriptionNotFound
                      details:
                        allOf:
                          - $ref: "#/components/schemas/Forum/properties/id"
    get:
      summary: "Returns whether or not the current user is subscribed to
      the given forum."
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: The forum\'s ID.
      responses:
        "200":
          description: "If the user is subscribed to the forum, true.
          Otherwise, false."
          content:
            application/json:
              schema:
                type: boolean
  /forums/authorized-actions:
    get:
      summary: "Returns the current user's authorized actions for all forums,
      irrespective of which one it'll be."
      responses:
        "200":
          description: The authorized actions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ForumAuthorizedActions"
  /threads:
    post:
      summary: Creates a new thread.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ThreadCreateEdit"  # TODO: Make schema
      responses:
        "201":
          description: The newly created thread.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Thread"
    get:
      summary: "Returns a list of threads that the current user has access to,
      and matches the requested filter, if there is one."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ThreadSearch"  # TODO: Make schema
      responses:
        "200":
          description: The list of threads,
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Thread"
    delete:
      summary: "Deletes the threads that the current user has access to,
      and match the requested filter, if there is one. The objects assosicated
      with them are deleted as well."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ThreadSearch"  # TODO: Make schema
      responses:
        "204":
          description: Success. The threads have been deleted.
            
components:
  schemas:
    # ----- Models used primarily in responses -----
    Exception:
      type: object
      properties:
        exception:
          type: object
          properties:
            type:
              type: string
              enum:
                - APIAuthorizationHeaderInvalid
                - APIAuthorizationHeaderMissing
                - APIForumChildLevelLimitReached
                - APIForumNotFound
                - APIForumParentIsChild
                - APIForumPermissionsGroupNotFound
                - APIForumPermissionsGroupUnchanged
                - APIForumPermissionsUserNotFound
                - APIForumPermissionsUserUnchanged
                - APIForumSubscriptionAlreadyExists
                - APIForumSubscriptionNotFound
                - APIForumUnchanged
                - APIGroupCannotDeleteLastDefault
                - APIGroupCannotDeletePermissionsForLastDefault
                - APIGroupCannotLeavePermissionNullForLastDefault
                - APIGroupNotFound
                - APIGroupPermissionsNotFound
                - APIGroupPermissionsUnchanged
                - APIGroupUnchanged
                - APIGuestSessionLimitReached
                - APIJSONInvalid
                - APIJSONMissing
                - APIJWTInvalid
                - APIJWTInvalidClaims
                - APIJWTUserNotFound
                - APINoPermission
                - APINotificationNotFound
                - APIOpenIDAuthenticationFailed
                - APIOpenIDNonceInvalid
                - APIOpenIDServiceNotFound
                - APIOpenIDStateInvalid
                - APIPostNotFound
                - APIPostUnchanged
                - APIPostVoteNotFound
                - APIPostVoteUnchanged
                - APIRateLimitExceeded
                - APIThreadLocked
                - APIThreadNotFound
                - APIThreadSubscriptionAlreadyExists
                - APIThreadSubscriptionNotFound
                - APIThreadUnchanged
                - APIThreadVoteNotFound
                - APIThreadVoteUnchanged
                - APIUserAvatarInvalid
                - APIUserAvatarNotAllowedType
                - APIUserAvatarTooLarge
                - APIUserBanAlreadyExpired
                - APIUserBanNotFound
                - APIUserBanUnchanged
                - APIUserBanned
                - APIUserBlockAlreadyExists
                - APIUserBlockNotFound
                - APIUserCannotRemoveLastDefaultGroup
                - APIUserFollowAlreadyExists
                - APIUserGroupAlreadyAdded
                - APIUserGroupNotAdded
                - APIUserNotFound
                - APIUserPermissionsUnchanged
                - APIUserUnchanged
                - HTTPException
              description: The exception\'s type.
            details:
              oneOf:
                - type: string
                - type: integer
                - type: object
              description: More details for the exception.
      description: An exception.
    User:
      type: object
      required:
        - id
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - avatar_type
        - is_banned
        - parsed_permissions
        - public_key
        - name
        - status
        - followee_count
        - follower_count
        - forum_count
        - post_count
        - thread_count
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: This user\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this user registered.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time this user was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this user was edited.
        registered_by:
          type: string
          minLength: 1
          maxLength: 128
          nullable: true
          readOnly: true
          example: openid.keycloak
          description: "The service this user was registered by.
          Only visible to them."
        external_id:
          type: string
          minLength: 1
          maxLength: 64
          nullable: true
          readOnly: true
          example: f351253c-5a64-46e1-834f-80ea19167bb0
          description: "This user's ID on the service they were registered by.
          Only visible to them."
        avatar_type:
          type: string
          minLength: 3
          maxLength: 256
          nullable: true
          readOnly: true
          example: image/png
          description: The MIME type of this user\'s avatar.
        is_banned:
          type: boolean
          description: Whether or not this user is banned.
        parsed_permissions:
          allOf:
            - $ref: "#/components/schemas/Permissions"
          description: This user\'s parsed permissions.
        encrypted_private_key:
          type: string
          format: base64
          nullable: true
          example: "JnMrdwKfAG+d9OsXQ6tM+EN9hExbdrVdFfXvYqmynrInXF+Atvc/V/
          re2qQovQ27YlvIW3daz6m5Fx0I/h75uH6SDLkFINuQtq+P9guc66ZeGPt+tfdAWH
          UaGLszE1xNYcPyemFsc7EFZj4TAvrd1zAu7HPx5pKgJ68hZWVhAfGnQITTJHzbNz
          uoap4UELFXHTtBV6O0Jhs16R24GSInrngC4SYb78VUgN1XIyvQCQAl2AMkYVaQZb
          r5d/h21HeGj3MSPDC4Zf8RUXFUgMZ4muKpieALgaSxG02I/csUJ9qH0Ye/zmTBf/
          XmYwpDjiX4Mr4kF/U8p/ta7D/Pf7vlAMQ3XTii03kS0W8xBh9T876eDAyCirz0jt
          bfNl1EFmfQH0kO+U2pp5p4DTOS6sApuFlzah//aMX7b9ijANH0Izdanj7Pb0jsJ6
          SboFT/rCzz0LN7SahM4O4ILaUnD2x65fjzI6VwL1d55UnJJxKJZALYKD2P+1S8eC
          yu5jOWgtGD9L7gyMjC9tXhlJS1sDTMG6MoTHKPKRRrJ9Tk1B/txH/QXPCreHZycD
          OiXu8CeHH5vZXTl5yWMGjUbN0GpQJ5IwRzZWun0Nm0eNR0SQVFJecIRpcoOuomwl
          lf3vU6x8aRiZq81zDOAHZsEKF2hBGR52XsRZxLQdciT5lXE85zYyA6Kt1ZDSdojK
          2I96lkNcYb5V3VFBatWvXFmwfMKMjYTA22w1Gj+eroPY7RoO+DG1iSiCQy70sb91
          T2swolzfUt3AezYgsKpB7lwLIrYGoqREZ05zzXWnfiiFQ2HvcoE62ExE1jn2ubR0
          RkOeQUTiP44CYmz6iGH7hctJfA1n2ElGJ+AP5VPBAdNnamIJX8SPE+YF5/aQUsaE
          ZUEcByg/wdcFVobSFbUvlJBgSRa9dTCFz/E41HblhI5INZK0XjovnStXzg8Daj+9
          XLmW7Rxl+sEQHY8uZgoHBK1FzcgISQ5todFbpv8IN5Nb6sqwgzp/GhcYOjQdmztK
          zvRWxO1TFWS/RpBqzm2T30wCCpYQUfq0LtwTjXv8Pz7on4AbhvdygtfZZ79OA6ox
          cV2v1ElxvuVPFZnXOJzCtXKzeAft/Aqy3YJTO2lN2/BEFuIx0WH7CM8CV3MwFa6G
          6td+46CnZ1QHK7Ol4+2YCVSOfUdXl6fpHQcMwI4emxXp9EoSqkmWdPM5Ae8rfAET
          +SNm4yyye/+gWR/Mg8HiYM6rXAfAJfKIMzLaouRsz/nssbYk92htjsM2lgPXkhiU
          wWOWqWI8py/9Zu3KXqgzcEJwe67xGc48WnLxoR54SjQbQlC4kUWJbogytGQJAyBF
          XbyEQkwsMLOnGNgc7l5B9BL3FF2pKEE58TOOTH9mo7IrhN06wZdGpVzabRY/Wpqa
          fxe7I+6eOzkojD1KSO27I0sG+XR9JcxD5MkTwoGfpYhc2Y1FV9wO2Dy8h8vOdYtS
          8sMk5IiyUGeAqBiiZIUPqLEwK1RGIAToMFtI4nr20Za0xEpvRKiv+qPGHDya0496
          TI96nKnrww/pujnNPjTGbs2kD1Rn7B1vavgXiSdbjPbnwbOvh92Abue7Ep1yj/fT
          TxNOEQ5PC+eK2mKGhWWL8ROliSYLBRtWsJ0dMl8SJ6aL7oEvOLfxf0Avx27vNP27
          GMxRX7Jnwcj+YoPc86z36ZUrRFO+jEuGF2rLEARn/Wb2LrGxb02a/RD40hu3EWQW
          oNWwHfOD9poSoepkqGP4V1j1v21btkfEC+jptOQqQAhfQdX/fTlFXcGN77hCzhfE
          e2k5L3U7i4c8Q5w3r+Y2kMWAU4haFUSB/zzt/tY8jPUZ+dWngzDk1Vvm910i1+KX
          P5DeC81RvRdZBd0TPjkK70LQbfbh+crd3X68ZE5H0FU2AQaLHK3EfBbDodqnoH0w
          OAkd+G1kGpEGuLshhEy1t5ztKCy7j36Fwx+WZGl8PC8Ia7LuM67GEgBtFMNoxd72
          5STOkWpd9JhfA+XN0WlDqAyRQ7QgRv7aB4ec2HtRldfgfvWDqhD0ipvEflpOGwjU
          O3XU5y1rAU2yFiA8nCXqC5Norz2gWqHMiU2enJ+w/GTMZfcXevzxGrGXglOYSs3T
          bobULsM7KD7YlUM8nN9U1U7XJXzob/7K5/ifLYOXFKrl9t2z2Lq/3KsvG53DJC80
          bKBJ7rdqnd"
          description: "This user's encrypted private key.
          Only visible to them."
        public_key:
          type: string
          format: base64
          nullable: true
          example: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1FD2OMRQUH
          7Ige00W2xeM48r9JwykMTf+WkQ9a53fJrq6dgDFaUOZ5d2AH62WUKD1TMwlYuiOZ
          Froxm6pKW4ya1DNZ8Oo7xBmdbz+ZAar0odLcJPhi9vHOyrhOyq71Ckqmlriv2KRm
          zdtP0A4YXAeto6xFCiyBLW8ygjlypASu3iLJuD4VcpNnj6ZtGuzoO1wo7a+BeSaJ
          o5VhEL3AhmxAXUOdWbBk+cqjlRF49PjwtAFotWeqpK7zbvA2AULbaPfk8HhceKjJ
          EZ9+3i9DjU0JVAQsYhJzULllh/9A6YwSkwLR6A7YFoMfzCjbLS9XZYy/PmhhkXre
          sgOSM3uKm1PwIDAQAB"
          description: This user\'s public key.
        name:
          type: string
          minLength: 1
          maxLength: 128
          nullable: true
          example: Duckman553
          description: This user\'s name.
        status:
          type: string
          minLength: 1
          maxLength: 65535
          nullable: true
          example: Busy with things of low importance.
          description: This user\'s status.
        followee_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many users this user has followed.
        follower_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many users have followed this user.
        forum_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many forums this user has created.
        message_received_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: "How many messages this user has received in total.
          Only visible to them."
        message_received_unread_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: "How many messages this user has received and not yet read.
          Only visible to them."
        message_sent_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: "How many messages this user has sent.
          Only visible to them."
        notification_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: "How many notifications this user has.
          Only visible to them."
        notification_unread_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: "How many unread notifications this user has.
          Only visible to them."
        post_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many posts this user has created.
        thread_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many threads tihs user has created.
      description: A user.
    UserBan:
      type: object
      required:
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - user_id
        - expiration_timestamp
        - reason
      properties:
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this ban was issued.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time this ban was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this ban was edited.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of the user this ban was issued to.
        expiration_timestamp:
          type: string
          format: date-time
          description: When this ban expires.
        reason:
          type: string
          minLength: 1
          maxLength: 65536
          nullable: true
          description: The reason for this ban.
      description: A user\'s ban.
    UserPermissions:
      allOf:
        - $ref: "#/components/schemas/NullablePermissions"
      type: object
      required:
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - user_id
      properties:
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time these permissions were created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time these permissions were edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times these permissions were edited.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of the user these permissions belong to.
      description: A user\'s custom permissions.
    Group:
      type: object
      required:
        - id
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - default_for
        - name
        - description
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: This group\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this group was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time this group was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this group was edited.
        default_for:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
            example: "*"
            description: A registration service, or \'*\'.
          description: "The registration services that users who are
          automatically assigned this group should have."
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: Default
          description: This group\'s name.
        description:
          type: string
          minLength: 1
          maxLength: 65536
          example: The default group all users are assigned to.
          description: This group\'s description.
      description: A group.
    GroupPermissions:
      allOf:
        - $ref: "#/components/schemas/NullablePermissions"
      type: object
      required:
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - group_id
      properties:
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time these permissions were created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time these permissions were edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times these permissions were edited.
        group_id:
          allOf:
            - $ref: "#/components/schemas/Group/properties/id"
          description: The ID of the group these permissions belong to.
      description: A group\'s custom permissions.
    Forum:
      type: object
      required:
        - id
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - parent_forum_id
        - user_id
        - name
        - description
        - order
        - subscriber_count
        - thread_count
        - last_thread_timestamp
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: The forum\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this forum was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time forum was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this forum was edited.
        parent_forum_id:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/id"
          nullable: true
          description: The ID of this forum\'s parent.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this forum\'s author.
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: Random
          description: This forum\'s name.
        description:
          type: string
          minLength: 1
          maxLength: 65536
          nullable: true
          example: General discussion about whichever topics you find interesting.
          description: This forum\'s description.
        order:
          type: integer
          minimum: -2147483647
          maximum: 2147483647
          example: 1
          description: "The pre-defined order this forum will appear in,
          mainly on frontend applications."
        subscriber_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many users have subscribed to this forum.
        thread_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many threads are in this forum (excluding child forums).
        last_thread_timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
          nullable: true
          description: When the last thread in this forum was created.
      description: A forum.
    ForumAuthorizedActions:
      type: object
      required:
        - create
        - create_subforum
        - create_thread
        - create_thread_locked
        - create_thread_pinned
        - delete
        - edit
        - edit_permissions_group
        - edit_permissions_user
        - edit_subscription
        - merge
        - move
        - view
        - view_permissions_group
        - view_permissions_user
      properties:
        create:
          type: boolean
          default: false
          description: Whether or not a user can create a forum.
        create_subforum:
          type: boolean
          default: false
          description: "Whether or not a user can create forums within a forums.
          Also known as 'sub-forums'."
        create_thread:
          type: boolean
          default: false
          description: Whether or not a user can create threads in a forum.
        create_thread_locked:
          type: boolean
          default: false
          description: Whether or not a user can create locked threads in a forum.
        create_thread_pinned:
          type: boolean
          default: false
          description: Whether or not a user can create pinned threads in a forum.
        delete:
          type: boolean
          default: false
          description: Whether or not a user can delete a forum.
        edit:
          type: boolean
          default: false
          description: Whether or not a user can edit a forum.
        edit_permissions_group:
          type: boolean
          default: false
          description: Whether or not a user can edit a group\'s permissions for a forum.
        edit_permissions_user:
          type: boolean
          default: false
          description: Whether or not a user can edit a user\'s permissions for a forum.
        edit_subscription:
          type: boolean
          default: false
          description: Whether or not a user can subscribe to a forum.
        merge:
          type: boolean
          default: false
          description: Whether or not a user can merge a forum with another.
        move:
          type: boolean
          default: false
          description: Whether or not a user can move a forum to another.
        view:
          type: boolean
          default: false
          description: Whether or not a user can view a forum.
        view_permissions_group:
          type: boolean
          default: false
          description: Whether or not a user can view a group\'s permissions for a forum,
        view_permissions_user:
          type: boolean
          default: false
          description: Whether or not a user can view a user\'s permissions for a forum.
      description: "The actions that a user is allowed to perform on a forum.
      Although the names may match those of permissions sometimes, they aren't
      the same, and may behave in unexpected ways when treated as such.
      See the documentation for more details."
    ForumPermissionsGroup:
      allOf:
        - $ref: "#/components/schemas/ForumNullablePermissions"
      required:
        - forum_id
        - group_id
      properties:
        forum_id:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/id"
          description: The forum\'s ID.
        group_id:
          allOf:
            - $ref: "#/components/schemas/Group/properties/id"
          description: The group\'s ID.
      description: Forum permissions for groups.
    ForumPermissionsUser:
      allOf:
        - $ref: "#/components/schemas/ForumNullablePermissions"
      required:
        - forum_id
        - user_id
      properties:
        forum_id:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/id"
          description: The forum\'s ID.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The user\'s ID.
      description: Forum permissions for users.
    Thread:
      type: object
      required:
        - id
        - creation_timestamp
        - edit_timestamp
        - forum_id
        - user_id
        - is_locked
        - is_pinned
        - tags
        - name
        - content
        - vote_value
        - post_count
        - subscriber_count
        - last_post_timestamp
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: The thread\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this thread was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time thread was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this thread was edited.
        forum_id:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/id"
          description: The ID of the forum this thread is in.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this thread\'s author.
        is_locked:
          type: boolean
          description: Whether or not this thread is locked.
        is_pinned:
          type: boolean
          description: Whether or not this thread is pinned.
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
            example: questions
          description: This thread\'s tags.
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: Tomorrow\'s presentation
          description: This thread\'s name.
        content:
          type: string
          minLength: 1
          maxLength: 128
          example: "Will any of you guys attend tomorrow's [talk](https://example.org)?
          I think it will be really interesting."
          description: This thread\'s content.
        vote_value:
          allOf:
            - $ref: "#/components/schemas/VoteValue"
          description: The computed value of this thread\'s votes.
        post_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many posts are in this thread.
        subscriber_count:
          allOf:
            - $ref: "#/components/schemas/Count"
          description: How many users have subscribed to this thread.
        last_post_timestamp:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
          nullable: true
          description: When the last post in this thread was created.
      description: A thread.
    ThreadVote:
      type: object
      required:
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - thread_id
        - user_id
        - upvote
      properties:
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this vote was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time vote was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this vote was edited.
        thread_id:
          allOf:
            - $ref: "#/components/schemas/Thread/properties/id"
          description: The ID of the thread this vote belongs to.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of the user that created this vote.
        upvote:
          type: boolean
          description: Whether or not this is an upvote.
      description: A vote on a thread.
    Post:
      type: object
      required:
         - id
         - creation_timestamp
         - edit_timestamp
         - edit_count
         - thread_id
         - user_id
         - content
         - vote_value
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: The post\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this post was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time post was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this post was edited.
        thread_id:
          allOf:
            - $ref: "#/components/schemas/Thread/properties/id"
          description: The ID of the thread this post is in.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this post\'s author.
        content:
          type: string
          minLength: 1
          maxLength: 262144
          example: "I will! I didn't know you were interested in that stuff."
          description: This post\'s content.
        vote_value:
          allOf:
            - $ref: "#/components/schemas/VoteValue"
          description: The computed value of this post\'s votes.
      description: A post.
    PostVote:
      type: object
      required:
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - post_id
        - user_id
        - upvote
      properties:
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this vote was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time vote was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this vote was edited.
        post_id:
          allOf:
            - $ref: "#/components/schemas/Post/properties/id"
          description: The ID of the post this vote belongs to.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of the user that created this vote.
        upvote:
          type: boolean
          description: Whether or not this is an upvote.
      description: A vote on a post.
    Message:
      type: object
      required:
        - id
        - creation_timestamp
        - edit_timestamp
        - edit_count
        - sender_id
        - receiver_id
        - is_read
        - encrypted_session_key
        - tag
        - encrypted_content
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: The message\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this message was created.
        edit_timestamp:
          allOf:
            - $ref: "#/components/schemas/EditTimestamp"
          description: The last time message was edited.
        edit_count:
          allOf:
            - $ref: "#/components/schemas/EditCount"
          description: How many times this message was edited.
        sender_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this message\'s sender.
        receiver_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this receiver\'s sender.
        is_read:
          type: boolean
          description: Whether or not this message has been read.
        encrypted_session_key:
          type: string
          format: base64
          example: "mC7NNYRUOpJzCeKzVco+l7qDVoAmRaES/DdvO+qSCS8JzHHL8B
          zWDNV9z8CqO5P2He9Lqf/WCbgyMKAVtuLvMvTrPLqxW6H2/lMMGtl1EOLdyS
          ol9miYu1Mb6y2283vIyahr8g=="
          description: "This message's session key, encrypted with the
          receiver's public RSA key."
        tag:
          type: string
          format: base64
          nullable: true
          example: LTUwNDM1Nzk5MjUxOTQ3ODQ2MDQ=
          description: "This message's tag, derived from the decrypted
          content to detect modifications."
        encrypted_content:
          type: string
          format: base64
          example: "WW91J3JlIGN1cmlvdXMsIGFuZCBJIGxpa2UgY3VyaW9zaXR5Li
          BIZXJlLCB5b3UgY2FuIGhhdmUgdGhpczogaHR0cHM6Ly9ueWFhLnNpL3ZpZX
          cvMTQzNTMwNQ=="
          description: This message\'s encrypted content.
      description: A message.
    Notification:
      type: object
      required:
        - id
        - creation_timestamp
        - user_id
        - is_read
        - type
        - identifier
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Id"
          description: The notification\'s ID.
        creation_timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationTimestamp"
          description: The time this notification was created.
        user_id:
          allOf:
            - $ref: "#/components/schemas/User/properties/id"
          description: The ID of this notification\'s owner.
        is_read:
          type: boolean
          description: Whether or not this notification has been read.
        type:
          type: string
          enum:
            - NewPostFromFollowee
            - NewPostInSubscribedThread
            - NewThreadFromFollowee
            - NewThreadInSubscribedForum
            - ForumChangedOwnership
          readOnly: true
          description: The type of this notification.
        identifier:
          type: string
          format: uuid
          readOnly: true
          description: "The identifier of this notification's subject.
          (For example, with a new thread notification, the thread's ID)"
      description: A notification.
    # ----- Mixins & helpers -----
    Permissions:
      type: object
      required:
        - forum_create
        - forum_delete_own
        - forum_delete_any
        - forum_edit_own
        - forum_edit_any
        - forum_merge_own
        - forum_merge_any
        - forum_move_own
        - forum_move_any
        - forum_view
        - group_create
        - group_delete
        - group_edit
        - group_edit_permissions
        - post_create
        - post_delete_own
        - post_delete_any
        - post_edit_own
        - post_edit_any
        - post_edit_vote
        - post_move_own
        - post_move_any
        - post_view
        - thread_create
        - thread_delete_own
        - thread_delete_any
        - thread_edit_own
        - thread_edit_any
        - thread_edit_lock_own
        - thread_edit_lock_any
        - thread_edit_pin
        - thread_edit_vote
        - thread_merge_own
        - thread_merge_any
        - thread_move_own
        - thread_move_any
        - thread_view
        - user_delete
        - user_edit
        - user_edit_ban
        - user_edit_groups
        - user_edit_permissions
      properties:
        forum_create:
          type: boolean
          default: false
          description: Whether or not a user can create forums.
        forum_delete_own:
          type: boolean
          default: false
          description: Whether or not a user can delete their own forums.
        forum_delete_any:
          type: boolean
          default: false
          description: Whether or not a user can delete any forum.
        forum_edit_own:
          type: boolean
          default: false
          description: Whether or not a user can edit their own forums.
        forum_edit_any:
          type: boolean
          default: false
          description: Whether or not a user can edit any forum.
        forum_merge_own:
          type: boolean
          default: false
          description: "Whether or not a user can merge their own forums
          with other forums they've created."
        forum_merge_any:
          type: boolean
          default: false
          description: Whether or not a user can merge any forum with any forum.
        forum_move_own:
          type: boolean
          default: false
          description: "Whether or not a user can move their forums to other
          forums they've created."
        forum_move_any:
          type: boolean
          default: false
          description: Whether or not a user can move any forum to any forum.
        forum_view:
          type: boolean
          default: false
          description: Whether or not a user can view forums.
        group_create:
          type: boolean
          default: false
          description: Whether or not a user can create groups.
        group_delete:
          type: boolean
          default: false
          description: Whether or not a user can delete groups.
        group_edit:
          type: boolean
          default: false
          description: Whether or not a user can edit groups.
        group_edit_permissions:
          type: boolean
          default: false
          description: Whether or not a user can edit groups\' permissions.
        post_create:
          type: boolean
          default: false
          description: Whether or not a user can create posts.
        post_delete_own:
          type: boolean
          default: false
          description: Whether or not a user can delete their own posts.
        post_delete_any:
          type: boolean
          default: false
          description: Whether or not a user can delete any post.
        post_edit_own:
          type: boolean
          default: false
          description: Whether or not a user can edit their own posts.
        post_edit_any:
          type: boolean
          default: false
          description: Whether or not a user can edit any post.
        post_edit_vote:
          type: boolean
          default: false
          description: Whether or not a user can vote on posts.
        post_move_own:
          type: boolean
          default: false
          description: "Whether or not a user can move their own posts to their
          own threads."
        post_move_any:
          type: boolean
          default: false
          description: Whether or not a user can move any post to any thread.
        post_view:
          type: boolean
          default: false
          description: Whether or not a user can view posts.
        thread_create:
          type: boolean
          default: false
          description: Whether or not a user can create threads.
        thread_delete_own:
          type: boolean
          default: false
          description: Whether or not a user can delete their own threads.
        thread_delete_any:
          type: boolean
          default: false
          description: Whether or not a user can delete any thread.
        thread_edit_own:
          type: boolean
          default: false
          description: Whether or not a user can edit their own threads.
        thread_edit_any:
          type: boolean
          default: false
          description: Whether or not a user can edit any thread.
        thread_edit_lock_own:
          type: boolean
          default: false
          description: Whether or not a user can lock their own threads.
        thread_edit_lock_any:
          type: boolean
          default: false
          description: Whether or not a user can lock any thread.
        thread_edit_pin:
          type: boolean
          default: false
          description: Whether or not a user can pin threads.
        thread_edit_vote:
          type: boolean
          default: false
          description: Whether or not a user can vote on threads.
        thread_merge_own:
          type: boolean
          default: false
          description: "Whether or not a user can merge their own threads with
          other threads they've created."
        thread_merge_any:
          type: boolean
          default: false
          description: Whether or not a user can merge any thread with any thread.
        thread_move_own:
          type: boolean
          default: false
          description: "Whether or not a user can move their own threads to
          forums they've created."
        thread_move_any:
          type: boolean
          default: false
          description: Whether or not a user can move any thread to any forum.
        thread_view:
          type: boolean
          default: false
          description: Whether or not a user can view threads.
        user_delete:
          type: boolean
          default: false
          description: Whether or not a user can delete other users.
        user_edit:
          type: boolean
          default: false
          description: Whether or not a user can edit other users.
        user_edit_ban:
          type: boolean
          default: false
          description: Whether or not a user can ban other users.
        user_edit_groups:
          type: boolean
          default: false
          description: Whether or not a user can modify other users\' groups.
        user_edit_permissions:
          type: boolean
          default: false
          description: Whether or not a user can modify other users\' permissions.
      description: Permissions.
    NullablePermissions:
      allOf:
        - $ref: "#/components/schemas/Permissions"
      properties:
        forum_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_create"
          nullable: true
          default: null
        forum_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_delete_own"
          nullable: true
          default: null
        forum_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_delete_any"
          nullable: true
          default: null
        forum_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_edit_own"
          nullable: true
          default: null
        forum_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_edit_any"
          nullable: true
          default: null
        forum_merge_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_merge_own"
          nullable: true
          default: null
        forum_merge_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_merge_any"
          nullable: true
          default: null
        forum_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_move_own"
          nullable: true
          default: null
        forum_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_move_any"
          nullable: true
          default: null
        forum_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_view"
          nullable: true
          default: null
        group_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/group_create"
          nullable: true
          default: null
        group_delete:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/group_delete"
          nullable: true
          default: null
        group_edit:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/group_edit"
          nullable: true
          default: null
        group_edit_permissions:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/group_edit_permissions"
          nullable: true
          default: null
        post_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_create"
          nullable: true
          default: null
        post_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_delete_own"
          nullable: true
          default: null
        post_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_delete_any"
          nullable: true
          default: null
        post_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_own"
          nullable: true
          default: null
        post_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_any"
          nullable: true
          default: null
        post_edit_vote:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_vote"
          nullable: true
          default: null
        post_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_move_own"
          nullable: true
          default: null
        post_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_move_any"
          nullable: true
          default: null
        post_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_view"
          nullable: true
          default: null
        thread_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_create"
          nullable: true
          default: null
        thread_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_delete_own"
          nullable: true
          default: null
        thread_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_delete_any"
          nullable: true
          default: null
        thread_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_own"
          nullable: true
          default: null
        thread_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_any"
          nullable: true
          default: null
        thread_edit_lock_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_lock_own"
          nullable: true
          default: null
        thread_edit_lock_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_lock_any"
          nullable: true
          default: null
        thread_edit_pin:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_pin"
          nullable: true
          default: null
        thread_edit_vote:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_vote"
          nullable: true
          default: null
        thread_merge_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_merge_own"
          nullable: true
          default: null
        thread_merge_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_merge_any"
          nullable: true
          default: null
        thread_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_move_own"
          nullable: true
          default: null
        thread_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_move_any"
          nullable: true
          default: null
        thread_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_view"
          nullable: true
          default: null
        user_delete:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/user_delete"
          nullable: true
          default: null
        user_edit:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/user_edit"
          nullable: true
          default: null
        user_edit_ban:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/user_edit_ban"
          nullable: true
          default: null
        user_edit_groups:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/user_edit_groups"
          nullable: true
          default: null
        user_edit_permissions:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/user_edit_permissions"
          nullable: true
          default: null
    ForumPermissions:
      type: object
      required:
        - forum_create
        - forum_delete_own
        - forum_delete_any
        - forum_edit_own
        - forum_edit_any
        - forum_merge_own
        - forum_merge_any
        - forum_move_own
        - forum_move_any
        - forum_view
        - post_create
        - post_delete_own
        - post_delete_any
        - post_edit_own
        - post_edit_any
        - post_edit_vote
        - post_move_own
        - post_move_any
        - post_view
        - thread_create
        - thread_delete_own
        - thread_delete_any
        - thread_edit_own
        - thread_edit_any
        - thread_edit_lock_own
        - thread_edit_lock_any
        - thread_edit_pin
        - thread_edit_vote
        - thread_merge_own
        - thread_merge_any
        - thread_move_own
        - thread_move_any
        - thread_view
      properties:
        forum_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_create"
        forum_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_delete_own"
        forum_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_delete_any"
        forum_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_edit_own"
        forum_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_edit_any"
        forum_merge_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_merge_own"
        forum_merge_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_merge_any"
        forum_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_move_own"
        forum_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_move_any"
        forum_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/forum_view"
        post_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_create"
        post_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_delete_own"
        post_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_delete_any"
        post_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_own"
        post_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_any"
        post_edit_vote:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_edit_vote"
        post_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_move_own"
        post_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_move_any"
        post_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/post_view"
        thread_create:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_create"
        thread_delete_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_delete_own"
        thread_delete_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_delete_any"
        thread_edit_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_own"
        thread_edit_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_any"
        thread_edit_lock_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_lock_own"
        thread_edit_lock_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_lock_any"
        thread_edit_pin:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_pin"
        thread_edit_vote:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_edit_vote"
        thread_merge_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_merge_own"
        thread_merge_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_merge_any"
        thread_move_own:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_move_own"
        thread_move_any:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_move_any"
        thread_view:
          allOf:
            - $ref: "#/components/schemas/Permissions/properties/thread_view"
      description: Permissions for forums.
    ForumNullablePermissions:
      type: object
      allOf:
        - $ref: "#/components/schemas/ForumPermissions"
      properties:
        forum_create:
          nullable: true
        forum_delete_own:
          nullable: true
        forum_delete_any:
          nullable: true
        forum_edit_own:
          nullable: true
        forum_edit_any:
          nullable: true
        forum_merge_own:
          nullable: true
        forum_merge_any:
          nullable: true
        forum_move_own:
          nullable: true
        forum_move_any:
          nullable: true
        forum_view:
          nullable: true
        post_create:
          nullable: true
        post_delete_own:
          nullable: true
        post_delete_any:
          nullable: true
        post_edit_own:
          nullable: true
        post_edit_any:
          nullable: true
        post_edit_vote:
          nullable: true
        post_move_own:
          nullable: true
        post_move_any:
          nullable: true
        post_view:
          nullable: true
        thread_create:
          nullable: true
        thread_delete_own:
          nullable: true
        thread_delete_any:
          nullable: true
        thread_edit_own:
          nullable: true
        thread_edit_any:
          nullable: true
        thread_edit_lock_own:
          nullable: true
        thread_edit_lock_any:
          nullable: true
        thread_edit_pin:
          nullable: true
        thread_edit_vote:
          nullable: true
        thread_merge_own:
          nullable: true
        thread_merge_any:
          nullable: true
        thread_move_own:
          nullable: true
        thread_move_any:
          nullable: true
        thread_view:
          nullable: true
      description: Forum permissions, but nullable.
    Id:
      type: string
      format: uuid
      readOnly: true
      description: An object\'s ID, in the form of an UUID4.
    Timestamp:
      type: string
      format: date-time
      description: A timestamp.
    CreationTimestamp:
      allOf:
        - $ref: "#/components/schemas/Timestamp"
      readOnly: true
      description: The time an object was created.
    EditTimestamp:
      allOf:
        - $ref: "#/components/schemas/Timestamp"
      nullable: true
      readOnly: true
      description: The time an object was last edited.
    Count:
      type: integer
      minimum: 0
      maximum: 2147483647
      readOnly: true
      example: 3
      description: A counter.
    EditCount:
      allOf:
        - $ref: "#/components/schemas/Count"
      readOnly: true
      description: The amount of times an object was edited.
    VoteValue:
      type: integer
      minimum: -2147483647
      maximum: 2147483647
      readOnly: true
      example: 28
      description: The computed value of an object\'s votes.
    # ----- Request-only objects -----
    Filter:
      type: object
      properties:
        "$and":
          type: array
          items:
            $ref: "#/components/schemas/Filter"
        "$or":
          type: array
          items:
            $ref: "#/components/schemas/Filter"
        "$not":
          allOf:
            - $ref: "#/components/schemas/Filter"
    ForumCreateEdit:
      type: object
      required:
        - name
        - description
        - order
        - parent_forum_id
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/name"
        description:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/description"
        order:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/order"
        parent_forum_id:
          allOf:
            - $ref: "#/components/schemas/Forum/properties/parent_forum_id"
    ForumSearch:
      type: object
      required:
        - limit
      properties:
        limit:
          allOf:
            - $ref: "#/components/schemas/Limit"
        offset:
          allOf:
            - $ref: "#/components/schemas/Offset"
        order:
          allOf:
            - $ref: "#/components/schemas/Order"
          properties:
            by:
              enum:
                - order
                - creation_timestamp
                - edit_timestamp
                - edit_count
                - subscriber_count
                - thread_count
              default: order
          description: How the forums should be ordered.
        filter:
          allOf:
            - $ref: "#/components/schemas/Filter"
          properties:
            "$eq":
              type: object
              minProperties: 1
              maxProperties: 1
              properties:
                id:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/id"
                creation_timestamp:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/creation_timestamp"
                edit_timestamp:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/edit_timestamp"
                edit_count:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/edit_count"
                parent_forum_id:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/parent_forum_id"
                user_id:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/user_id"
                name:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/name"
                description:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/description"
                order:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/order"
                last_thread_timestamp:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/last_thread_timestamp"
                subscriber_count:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/subscriber_count"
                thread_count:
                  allOf:
                    - $ref: "#/components/schemas/Forum/properties/thread_count"
    Offset:
      type: integer
      minimum: 0
      maximum: 0
      default: 0
      description: How many results to skip. Useful for pagination.
    Order:
      type: object
      required:
        - by
        - asc
      properties:
        by:
          type: string
          description: Which attribute to order by.
        asc:
          type: boolean
          default: false
          description: Ascending, or descending.
      description: The order for a list of objects.
    Limit:
      type: integer
      minimum: 1
      maximum: 512
      example: 50
      description: How many results to look for.
